<!doctype html>
<!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en"> <![endif]-->
<!--[if (IE 7)&!(IEMobile)]><html class="no-js lt-ie9 lt-ie8" lang="en"><![endif]-->
<!--[if (IE 8)&!(IEMobile)]><html class="no-js lt-ie9" lang="en"><![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"><!--<![endif]-->
<head>
<meta charset="utf-8">
<title>Text analysis of Trump's tweets confirms he writes only the (angrier) Android half &#8211; Variance Explained</title>
<meta name="description" content="I don’t normally post about politics (I’m not particularly savvy about polling, which is where data science has had the largest impact on politics). But this weekend I saw a hypothesis about Donald Trump’s twitter account that simply begged to be investigated with data:

">
<meta name="keywords" content="r, statistics">


<!-- Twitter Cards -->
<meta name="twitter:title" content="Text analysis of Trump's tweets confirms he writes only the (angrier) Android half">
<meta name="twitter:description" content="I don’t normally post about politics (I’m not particularly savvy about polling, which is where data science has had the largest impact on politics). But this weekend I saw a hypothesis about Donald Trump’s twitter account that simply begged to be investigated with data:

">
<meta name="twitter:site" content="@drob">
<meta name="twitter:creator" content="@drob">

<meta name="twitter:card" content="summary">
<meta name="twitter:image" content="http://varianceexplained.org/images/default-thumb.png">

<!-- Open Graph -->
<meta property="og:locale" content="en_US">
<meta property="og:type" content="article">
<meta property="og:title" content="Text analysis of Trump's tweets confirms he writes only the (angrier) Android half">
<meta property="og:description" content="I don’t normally post about politics (I’m not particularly savvy about polling, which is where data science has had the largest impact on politics). But this weekend I saw a hypothesis about Donald Trump’s twitter account that simply begged to be investigated with data:

">
<meta property="og:url" content="http://varianceexplained.org/r/trump-tweets/">
<meta property="og:site_name" content="Variance Explained">





<link rel="canonical" href="http://varianceexplained.org/r/trump-tweets/">
<link href="http://varianceexplained.org/feed.xml" type="application/atom+xml" rel="alternate" title="Variance Explained Feed">


<!-- http://t.co/dKP3o1e -->
<meta name="HandheldFriendly" content="True">
<meta name="MobileOptimized" content="320">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- For all browsers -->
<link rel="stylesheet" href="http://varianceexplained.org/assets/css/main.css">

<meta http-equiv="cleartype" content="on">

<!-- HTML5 Shiv and Media Query Support -->
<!--[if lt IE 9]>
	<script src="http://varianceexplained.org/assets/js/vendor/html5shiv.min.js"></script>
	<script src="http://varianceexplained.org/assets/js/vendor/respond.min.js"></script>
<![endif]-->

<!-- Modernizr -->
<script src="http://varianceexplained.org/assets/js/vendor/modernizr-2.7.1.custom.min.js"></script>

<!-- MathJax -->
<script type="text/javascript"
  src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML">
</script>

<link href='//fonts.googleapis.com/css?family=PT+Sans+Narrow:400,700%7CPT+Serif:400,700,400italic' rel='stylesheet' type='text/css'>

<!-- Icons -->
<!-- 16x16 -->
<link rel="shortcut icon" href="http://varianceexplained.org/favicon.ico">
<!-- 32x32 -->
<link rel="shortcut icon" href="http://varianceexplained.org/favicon.png">
<!-- 57x57 (precomposed) for iPhone 3GS, pre-2011 iPod Touch and older Android devices -->
<link rel="apple-touch-icon-precomposed" href="http://varianceexplained.org/images/apple-touch-icon-precomposed.png">
<!-- 72x72 (precomposed) for 1st generation iPad, iPad 2 and iPad mini -->
<link rel="apple-touch-icon-precomposed" sizes="72x72" href="http://varianceexplained.org/images/apple-touch-icon-72x72-precomposed.png">
<!-- 114x114 (precomposed) for iPhone 4, 4S, 5 and post-2011 iPod Touch -->
<link rel="apple-touch-icon-precomposed" sizes="114x114" href="http://varianceexplained.org/images/apple-touch-icon-114x114-precomposed.png">
<!-- 144x144 (precomposed) for iPad 3rd and 4th generation -->
<link rel="apple-touch-icon-precomposed" sizes="144x144" href="http://varianceexplained.org/images/apple-touch-icon-144x144-precomposed.png">

<!-- Google Analytics -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-57723549-1', 'auto');
  ga('send', 'pageview');
</script>


<meta property="og:image" content="http://varianceexplained.org/figs/2016-08-09-trump-tweets/android_iphone_ratios_plot-1.svg">
</head>

<body class="post">

<!--[if lt IE 9]><div class="browser-upgrade alert alert-info">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</div><![endif]-->

<div class="navigation-wrapper">
	<div class="site-name">
		<a href="http://varianceexplained.org">Variance Explained</a>
	</div><!-- /.site-name -->
	<div class="top-navigation">
		<nav role="navigation" id="site-nav" class="nav">
		    <ul>
		        
					    
					    <li><a href="http://varianceexplained.org/about/" >About Me</a></li>
					  
					    
					    <li><a href="http://varianceexplained.org/posts/" >Posts</a></li>
					  
					    
					    <li><a href="https://www.datacamp.com/courses/introduction-to-the-tidyverse" target="_blank">Learn R</a></li>
					  
					    
					    <li><a href="https://www.tidytextmining.com/" target="_blank">Text Mining in R</a></li>
					  
					    
					    <li><a href="http://varianceexplained.org/r/empirical-bayes-book/" >Introduction to Empirical Bayes</a></li>
					  
		    </ul>
		</nav>
	</div><!-- /.top-navigation -->
</div><!-- /.navigation-wrapper -->



<div id="main" role="main">
  <div class="article-author-side">
    


	<img src="http://varianceexplained.org/images/david_robinson_picture2.jpg" class="bio-photo" alt="David Robinson bio photo">

<h3>David Robinson</h3>
<p>Chief Data Scientist at DataCamp, works in R and Python.</p>
<a href="mailto:drob@datacamp.com" class="author-social" target="_blank"><i class="fa fa-envelope-square"></i> Email</a>
<a href="http://twitter.com/drob" class="author-social" target="_blank"><i class="fa fa-twitter-square"></i> Twitter</a>





<a href="http://github.com/dgrtwo" class="author-social" target="_blank"><i class="fa fa-github"></i> Github</a>
<a href="http://stackoverflow.com/users/712603" class="author-social" target="_blank"><i class="fa fa-stack-overflow"></i> Stack Overflow</a>






<h4>Subscribe</h4>

<form method='post' action='http://blogtrottr.com'>
    <input type='text' name='btr_email' placeholder = 'Your email'/><br />
    <input type='hidden' name='btr_url' value='http://varianceexplained.org/feed.xml' />
    <input type='hidden' name='schedule_type' value='0' />
    <input type='submit' class="styled-button-4" value='Subscribe to this blog' />
</form>

<style type="text/css"> 
.styled-button-4 {
	-webkit-box-shadow:rgba(0,0,0,0.98) 0 1px 0 0;
	-moz-box-shadow:rgba(0,0,0,0.98) 0 1px 0 0;
	box-shadow:rgba(0,0,0,0.98) 0 1px 0 0;
	background-color:#EEE;
	border-radius:0;
	-webkit-border-radius:0;
	-moz-border-radius:0;
	border:1px solid #999;
	color:#666;
	font-family:'Lucida Grande',Tahoma,Verdana,Arial,Sans-serif;
	font-size:11px;
	font-weight:700;
	padding:2px 6px;
	height:28px
}
</style>


<h4>Recommended Blogs</h4>
<ul>
    <li><a href="https://www.datacamp.com/community/blog">DataCamp</a></li>
    <li><a href="http://www.r-bloggers.com/">R Bloggers</a></li>
    <li><a href="http://blog.rstudio.org/">RStudio Blog</a></li>
    <li><a href="http://r4stats.com/">R4Stats</a></li>
    <li><a href="http://simplystatistics.org/">Simply Statistics</a></li>
</ul>

  </div>
  <article class="post">
    <div class="headline-wrap">
      
        <h1><a href="http://varianceexplained.org/r/trump-tweets/" rel="bookmark" title="Text analysis of Trump's tweets confirms he writes only the (angrier) Android half">Text analysis of Trump's tweets confirms he writes only the (angrier) Android half</a></h1>
      
    </div><!--/ .headline-wrap -->
    <div class="article-wrap">
      <p>I don’t normally post about politics (I’m not particularly savvy about polling, which is where data science <a href="http://fivethirtyeight.com/">has had the largest impact on politics</a>). But this weekend I saw a hypothesis about Donald Trump’s twitter account that simply begged to be investigated with data:</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Every non-hyperbolic tweet is from iPhone (his staff). <br /><br />Every hyperbolic tweet is from Android (from him). <a href="https://t.co/GWr6D8h5ed">pic.twitter.com/GWr6D8h5ed</a></p>&mdash; Todd Vaziri (@tvaziri) <a href="https://twitter.com/tvaziri/status/762005541388378112">August 6, 2016</a></blockquote>
<script async="" src="http://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>When Trump wishes the Olympic team good luck, he’s tweeting from his iPhone. When he’s insulting a rival, he’s usually tweeting from an Android. Is this an artifact showing which tweets are Trump’s own and which are by some handler?</p>

<p>Others have <a href="http://www.cnet.com/news/trumps-tweets-android-for-nasty-iphone-for-nice/">explored Trump’s timeline</a> and noticed this tends to hold up- and Trump himself <a href="http://www.theverge.com/2015/10/5/9453935/donald-trump-twitter-strategy">does indeed tweet from a Samsung Galaxy</a>. But how could we examine it quantitatively? I’ve been writing about text mining and <a href="http://varianceexplained.org/r/yelp-sentiment/">sentiment analysis</a> recently, particularly during my development of the <a href="http://github.com/juliasilge/tidytext">tidytext R package</a> with Julia Silge, and this is a great opportunity to apply it again.</p>

<p>My analysis, shown below, concludes that <strong>the Android and iPhone tweets are clearly from different people</strong>, posting during different times of day and using hashtags, links, and retweets in distinct ways. What’s more, we can see that <strong>the Android tweets are angrier and more negative</strong>, while the iPhone tweets tend to be benign announcements and pictures. Overall I’d agree with <a href="https://twitter.com/tvaziri">@tvaziri</a>’s analysis: this lets us tell the difference between the campaign’s tweets (iPhone) and Trump’s own (Android).</p>

<h3 id="the-dataset">The dataset</h3>

<p>First we’ll retrieve the content of Donald Trump’s timeline using the <code class="highlighter-rouge">userTimeline</code> function in the <a href="https://cran.r-project.org/web/packages/twitteR">twitteR</a> package:<sup id="fnref:fullcode"><a href="#fn:fullcode" class="footnote">1</a></sup></p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">purrr</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">twitteR</span><span class="p">)</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># You'd need to set global options with an authenticated app</span><span class="w">
</span><span class="n">setup_twitter_oauth</span><span class="p">(</span><span class="n">getOption</span><span class="p">(</span><span class="s2">"twitter_consumer_key"</span><span class="p">),</span><span class="w">
                    </span><span class="n">getOption</span><span class="p">(</span><span class="s2">"twitter_consumer_secret"</span><span class="p">),</span><span class="w">
                    </span><span class="n">getOption</span><span class="p">(</span><span class="s2">"twitter_access_token"</span><span class="p">),</span><span class="w">
                    </span><span class="n">getOption</span><span class="p">(</span><span class="s2">"twitter_access_token_secret"</span><span class="p">))</span><span class="w">

</span><span class="c1"># We can request only 3200 tweets at a time; it will return fewer</span><span class="w">
</span><span class="c1"># depending on the API</span><span class="w">
</span><span class="n">trump_tweets</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">userTimeline</span><span class="p">(</span><span class="s2">"realDonaldTrump"</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">3200</span><span class="p">)</span><span class="w">
</span><span class="n">trump_tweets_df</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tbl_df</span><span class="p">(</span><span class="n">map_df</span><span class="p">(</span><span class="n">trump_tweets</span><span class="p">,</span><span class="w"> </span><span class="n">as.data.frame</span><span class="p">))</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># if you want to follow along without setting up Twitter authentication,</span><span class="w">
</span><span class="c1"># just use my dataset:</span><span class="w">
</span><span class="n">load</span><span class="p">(</span><span class="n">url</span><span class="p">(</span><span class="s2">"http://varianceexplained.org/files/trump_tweets_df.rda"</span><span class="p">))</span></code></pre></figure>

<p>We clean this data a bit, extracting the source application. (We’re looking only at the iPhone and Android tweets- a much smaller number are from the web client or iPad).</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">tidyr</span><span class="p">)</span><span class="w">

</span><span class="n">tweets</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">trump_tweets_df</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">select</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">statusSource</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="n">created</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">extract</span><span class="p">(</span><span class="n">statusSource</span><span class="p">,</span><span class="w"> </span><span class="s2">"source"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Twitter for (.*?)&lt;"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">source</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="nf">c</span><span class="p">(</span><span class="s2">"iPhone"</span><span class="p">,</span><span class="w"> </span><span class="s2">"Android"</span><span class="p">))</span></code></pre></figure>

<p>Overall, this includes 628 tweets from iPhone, and 762 tweets from Android.</p>

<p>One consideration is what time of day the tweets occur, which we’d expect to be a “signature” of their user. Here we can certainly spot a difference:</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">lubridate</span><span class="p">)</span><span class="w">
</span><span class="n">library</span><span class="p">(</span><span class="n">scales</span><span class="p">)</span><span class="w">

</span><span class="n">tweets</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">source</span><span class="p">,</span><span class="w"> </span><span class="n">hour</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">hour</span><span class="p">(</span><span class="n">with_tz</span><span class="p">(</span><span class="n">created</span><span class="p">,</span><span class="w"> </span><span class="s2">"EST"</span><span class="p">)))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">percent</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ggplot</span><span class="p">(</span><span class="n">aes</span><span class="p">(</span><span class="n">hour</span><span class="p">,</span><span class="w"> </span><span class="n">percent</span><span class="p">,</span><span class="w"> </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">source</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_line</span><span class="p">()</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">scale_y_continuous</span><span class="p">(</span><span class="n">labels</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">percent_format</span><span class="p">())</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Hour of day (EST)"</span><span class="p">,</span><span class="w">
       </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"% of tweets"</span><span class="p">,</span><span class="w">
       </span><span class="n">color</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span></code></pre></figure>

<p><img src="/figs/2016-08-09-trump-tweets/unnamed-chunk-3-1.svg" alt="center" /></p>

<p>Trump on the Android does a lot more tweeting in the morning, while the campaign posts from the iPhone more in the afternoon and early evening.</p>

<p>Another place we can spot a difference is in Trump’s anachronistic behavior of “manually retweeting” people by copy-pasting their tweets, then surrounding them with quotation marks:</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">&quot;<a href="https://twitter.com/trumplican2016">@trumplican2016</a>: <a href="https://twitter.com/realDonaldTrump">@realDonaldTrump</a> <a href="https://twitter.com/DavidWohl">@DavidWohl</a> stay the course mr trump your message is resonating with the PEOPLE&quot;</p>&mdash; Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/758512401629192192">July 28, 2016</a></blockquote>
<script async="" src="http://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>Almost all of these quoted tweets are posted from the Android:</p>

<p><img src="/figs/2016-08-09-trump-tweets/unnamed-chunk-4-1.svg" alt="center" /></p>

<p>In the remaining by-word analyses in this text, I’ll filter these quoted tweets out (since they contain text from followers that may not be representative of Trump’s own tweets).</p>

<p>Somewhere else we can see a difference involves sharing links or pictures in tweets.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">tweet_picture_counts</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tweets</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="n">str_detect</span><span class="p">(</span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="s1">'^"'</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">source</span><span class="p">,</span><span class="w">
        </span><span class="n">picture</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">ifelse</span><span class="p">(</span><span class="n">str_detect</span><span class="p">(</span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="s2">"t.co"</span><span class="p">),</span><span class="w">
                         </span><span class="s2">"Picture/link"</span><span class="p">,</span><span class="w"> </span><span class="s2">"No picture/link"</span><span class="p">))</span><span class="w">

</span><span class="n">ggplot</span><span class="p">(</span><span class="n">tweet_picture_counts</span><span class="p">,</span><span class="w"> </span><span class="n">aes</span><span class="p">(</span><span class="n">source</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">picture</span><span class="p">))</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">geom_bar</span><span class="p">(</span><span class="n">stat</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"identity"</span><span class="p">,</span><span class="w"> </span><span class="n">position</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"dodge"</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w">
  </span><span class="n">labs</span><span class="p">(</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">,</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"Number of tweets"</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">""</span><span class="p">)</span></code></pre></figure>

<p><img src="/figs/2016-08-09-trump-tweets/unnamed-chunk-5-1.svg" alt="center" /></p>

<p>It turns out tweets from the iPhone were <strong>38 times as likely to contain either a picture or a link.</strong> This also makes sense with our narrative: the iPhone (presumably run by the campaign) tends to write “announcement” tweets about events, like this:</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Thank you Windham, New Hampshire! <a href="https://twitter.com/hashtag/TrumpPence16?src=hash">#TrumpPence16</a> <a href="https://twitter.com/hashtag/MAGA?src=hash">#MAGA</a> <a href="https://t.co/ZL4Q01Q49s">pic.twitter.com/ZL4Q01Q49s</a></p>&mdash; Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/762110918721310721">August 7, 2016</a></blockquote>
<script async="" src="http://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>While Android (Trump himself) tends to write picture-less tweets like:</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">The media is going crazy. They totally distort so many things on purpose. Crimea, nuclear, &quot;the baby&quot; and so much more. Very dishonest!</p>&mdash; Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/762400869858115588">August 7, 2016</a></blockquote>
<script async="" src="http://platform.twitter.com/widgets.js" charset="utf-8"></script>

<h3 id="comparison-of-words">Comparison of words</h3>

<p>Now that we’re sure there’s a difference between these two accounts, what can we say about the difference in the <em>content</em>? We’ll use the <a href="https://cran.r-project.org/web/packages/tidytext">tidytext</a> package that <a href="http://juliasilge.com/">Julia Silge</a> and I developed.</p>

<p>We start by dividing into individual words using the <code class="highlighter-rouge">unnest_tokens</code> function (see <a href="https://cran.r-project.org/web/packages/tidytext/vignettes/tidytext.html">this vignette</a> for more), and removing some common “stopwords”<sup id="fnref:regex"><a href="#fn:regex" class="footnote">2</a></sup>:</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">tidytext</span><span class="p">)</span><span class="w">

</span><span class="n">reg</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="s2">"([^A-Za-z\\d#@']|'(?![A-Za-z\\d#@]))"</span><span class="w">
</span><span class="n">tweet_words</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tweets</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="n">str_detect</span><span class="p">(</span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="s1">'^"'</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">text</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">str_replace_all</span><span class="p">(</span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="s2">"https://t.co/[A-Za-z\\d]+|&amp;amp;"</span><span class="p">,</span><span class="w"> </span><span class="s2">""</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">unnest_tokens</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">text</span><span class="p">,</span><span class="w"> </span><span class="n">token</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"regex"</span><span class="p">,</span><span class="w"> </span><span class="n">pattern</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">reg</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="o">!</span><span class="n">word</span><span class="w"> </span><span class="o">%in%</span><span class="w"> </span><span class="n">stop_words</span><span class="o">$</span><span class="n">word</span><span class="p">,</span><span class="w">
         </span><span class="n">str_detect</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="s2">"[a-z]"</span><span class="p">))</span><span class="w">

</span><span class="n">tweet_words</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## # A tibble: 8,753 x 4
##                    id source             created                   word
##                 &lt;chr&gt;  &lt;chr&gt;              &lt;time&gt;                  &lt;chr&gt;
## 1  676494179216805888 iPhone 2015-12-14 20:09:15                 record
## 2  676494179216805888 iPhone 2015-12-14 20:09:15                 health
## 3  676494179216805888 iPhone 2015-12-14 20:09:15 #makeamericagreatagain
## 4  676494179216805888 iPhone 2015-12-14 20:09:15             #trump2016
## 5  676509769562251264 iPhone 2015-12-14 21:11:12               accolade
## 6  676509769562251264 iPhone 2015-12-14 21:11:12             @trumpgolf
## 7  676509769562251264 iPhone 2015-12-14 21:11:12                 highly
## 8  676509769562251264 iPhone 2015-12-14 21:11:12              respected
## 9  676509769562251264 iPhone 2015-12-14 21:11:12                   golf
## 10 676509769562251264 iPhone 2015-12-14 21:11:12                odyssey
## # ... with 8,743 more rows</code></pre></figure>

<p>What were the most common words in Trump’s tweets overall?</p>

<p><img src="/figs/2016-08-09-trump-tweets/tweet_words_plot-1.svg" alt="center" /></p>

<p>These should look familiar for anyone who has seen the feed. Now let’s consider which words are most common from the Android relative to the iPhone, and vice versa. We’ll use the simple measure of log odds ratio, calculated for each word as:<sup id="fnref:plusone"><a href="#fn:plusone" class="footnote">3</a></sup></p>

<script type="math/tex; mode=display">\log_2(\frac{\frac{\mbox{# in Android} + 1}{\mbox{Total Android} + 1}}
  {\frac{\mbox{# in iPhone} + 1}{\mbox{Total iPhone} + 1}})</script>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">android_iphone_ratios</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tweet_words</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">source</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;=</span><span class="w"> </span><span class="m">5</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">spread</span><span class="p">(</span><span class="n">source</span><span class="p">,</span><span class="w"> </span><span class="n">n</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate_each</span><span class="p">(</span><span class="n">funs</span><span class="p">((</span><span class="n">.</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">.</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="m">1</span><span class="p">)),</span><span class="w"> </span><span class="o">-</span><span class="n">word</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">logratio</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">log2</span><span class="p">(</span><span class="n">Android</span><span class="w"> </span><span class="o">/</span><span class="w"> </span><span class="n">iPhone</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">arrange</span><span class="p">(</span><span class="n">desc</span><span class="p">(</span><span class="n">logratio</span><span class="p">))</span></code></pre></figure>

<p>Which are the words most likely to be from Android and most likely from iPhone?</p>

<p><img src="/figs/2016-08-09-trump-tweets/android_iphone_ratios_plot-1.svg" alt="center" /></p>

<p>A few observations:</p>

<ul>
  <li>
    <p><strong>Most hashtags come from the iPhone</strong>. Indeed, almost no tweets from Trump’s Android contained hashtags, with some rare exceptions like <a href="https://twitter.com/realDonaldTrump/status/753960134422900736">this one</a>. (This is true only because we filtered out the quoted “retweets”, as Trump does sometimes quote tweets <a href="https://twitter.com/realDonaldTrump/status/731805331425218560">like this</a> that contain hashtags).</p>
  </li>
  <li>
    <p><strong>Words like “join” and “tomorrow”, and times like “7pm”, also came only from the iPhone</strong>. The iPhone is clearly responsible for event announcements like <a href="https://twitter.com/realDonaldTrump/status/743522630230228993">this one</a> (“Join me in Houston, Texas tomorrow night at 7pm!”)</p>
  </li>
  <li>
    <p><strong>A lot of “emotionally charged” words, like “badly”, “crazy”, “weak”, and “dumb”, were overwhelmingly more common on Android.</strong> This supports the original hypothesis that this is the “angrier” or more hyperbolic account.</p>
  </li>
</ul>

<h3 id="sentiment-analysis-trumps-tweets-are-much-more-negative-than-his-campaigns">Sentiment analysis: Trump’s tweets are much more negative than his campaign’s</h3>

<p>Since we’ve observed a difference in sentiment between the Android and iPhone tweets, let’s try quantifying it. We’ll work with the <a href="http://saifmohammad.com/WebPages/NRC-Emotion-Lexicon.htm">NRC Word-Emotion Association</a> lexicon, available from the tidytext package, which associates words with 10 sentiments: <strong>positive</strong>, <strong>negative</strong>, <strong>anger</strong>, <strong>anticipation</strong>, <strong>disgust</strong>, <strong>fear</strong>, <strong>joy</strong>, <strong>sadness</strong>, <strong>surprise</strong>, and <strong>trust</strong>.</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">nrc</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">sentiments</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">filter</span><span class="p">(</span><span class="n">lexicon</span><span class="w"> </span><span class="o">==</span><span class="w"> </span><span class="s2">"nrc"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">dplyr</span><span class="o">::</span><span class="n">select</span><span class="p">(</span><span class="n">word</span><span class="p">,</span><span class="w"> </span><span class="n">sentiment</span><span class="p">)</span><span class="w">

</span><span class="n">nrc</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## # A tibble: 13,901 x 2
##           word sentiment
##          &lt;chr&gt;     &lt;chr&gt;
## 1       abacus     trust
## 2      abandon      fear
## 3      abandon  negative
## 4      abandon   sadness
## 5    abandoned     anger
## 6    abandoned      fear
## 7    abandoned  negative
## 8    abandoned   sadness
## 9  abandonment     anger
## 10 abandonment      fear
## # ... with 13,891 more rows</code></pre></figure>

<p>To measure the sentiment of the Android and iPhone tweets, we can count the number of words in each category:</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">sources</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tweet_words</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">source</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">mutate</span><span class="p">(</span><span class="n">total_words</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">n</span><span class="p">())</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">distinct</span><span class="p">(</span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">source</span><span class="p">,</span><span class="w"> </span><span class="n">total_words</span><span class="p">)</span><span class="w">

</span><span class="n">by_source_sentiment</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">tweet_words</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">inner_join</span><span class="p">(</span><span class="n">nrc</span><span class="p">,</span><span class="w"> </span><span class="n">by</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s2">"word"</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">count</span><span class="p">(</span><span class="n">sentiment</span><span class="p">,</span><span class="w"> </span><span class="n">id</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ungroup</span><span class="p">()</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">complete</span><span class="p">(</span><span class="n">sentiment</span><span class="p">,</span><span class="w"> </span><span class="n">id</span><span class="p">,</span><span class="w"> </span><span class="n">fill</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">list</span><span class="p">(</span><span class="n">n</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="m">0</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">inner_join</span><span class="p">(</span><span class="n">sources</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">source</span><span class="p">,</span><span class="w"> </span><span class="n">sentiment</span><span class="p">,</span><span class="w"> </span><span class="n">total_words</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">summarize</span><span class="p">(</span><span class="n">words</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="nf">sum</span><span class="p">(</span><span class="n">n</span><span class="p">))</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">ungroup</span><span class="p">()</span><span class="w">

</span><span class="n">head</span><span class="p">(</span><span class="n">by_source_sentiment</span><span class="p">)</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## # A tibble: 6 x 4
##    source    sentiment total_words words
##     &lt;chr&gt;        &lt;chr&gt;       &lt;int&gt; &lt;dbl&gt;
## 1 Android        anger        4901   321
## 2 Android anticipation        4901   256
## 3 Android      disgust        4901   207
## 4 Android         fear        4901   268
## 5 Android          joy        4901   199
## 6 Android     negative        4901   560</code></pre></figure>

<p>(For example, we see that 321 of the 4901 words in the Android tweets were associated with “anger”). We then want to measure how much more likely the Android account is to use an emotionally-charged term relative to the iPhone account. Since this is count data, we can use a <a href="https://stat.ethz.ch/R-manual/R-devel/library/stats/html/poisson.test.html">Poisson test</a> to measure the difference:</p>

<figure class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">broom</span><span class="p">)</span><span class="w">

</span><span class="n">sentiment_differences</span><span class="w"> </span><span class="o">&lt;-</span><span class="w"> </span><span class="n">by_source_sentiment</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">group_by</span><span class="p">(</span><span class="n">sentiment</span><span class="p">)</span><span class="w"> </span><span class="o">%&gt;%</span><span class="w">
  </span><span class="n">do</span><span class="p">(</span><span class="n">tidy</span><span class="p">(</span><span class="n">poisson.test</span><span class="p">(</span><span class="n">.</span><span class="o">$</span><span class="n">words</span><span class="p">,</span><span class="w"> </span><span class="n">.</span><span class="o">$</span><span class="n">total_words</span><span class="p">)))</span><span class="w">

</span><span class="n">sentiment_differences</span></code></pre></figure>

<figure class="highlight"><pre><code class="language-text" data-lang="text">## Source: local data frame [10 x 9]
## Groups: sentiment [10]
## 
##       sentiment estimate statistic      p.value parameter  conf.low
##           (chr)    (dbl)     (dbl)        (dbl)     (dbl)     (dbl)
## 1         anger 1.492863       321 2.193242e-05  274.3619 1.2353162
## 2  anticipation 1.169804       256 1.191668e-01  239.6467 0.9604950
## 3       disgust 1.677259       207 1.777434e-05  170.2164 1.3116238
## 4          fear 1.560280       268 1.886129e-05  225.6487 1.2640494
## 5           joy 1.002605       199 1.000000e+00  198.7724 0.8089357
## 6      negative 1.692841       560 7.094486e-13  459.1363 1.4586926
## 7      positive 1.058760       555 3.820571e-01  541.4449 0.9303732
## 8       sadness 1.620044       303 1.150493e-06  251.9650 1.3260252
## 9      surprise 1.167925       159 2.174483e-01  148.9393 0.9083517
## 10        trust 1.128482       369 1.471929e-01  350.5114 0.9597478
## Variables not shown: conf.high (dbl), method (fctr), alternative (fctr)</code></pre></figure>

<p>And we can visualize it with a 95% confidence interval:</p>

<p><img src="/figs/2016-08-09-trump-tweets/unnamed-chunk-8-1.svg" alt="center" /></p>

<p>Thus, Trump’s Android account uses about 40-80% more words related to <strong>disgust</strong>, <strong>sadness</strong>, <strong>fear</strong>, <strong>anger</strong>, and other “negative” sentiments than the iPhone account does. (The positive emotions weren’t different to a statistically significant extent).</p>

<p>We’re especially interested in which words drove this different in sentiment. Let’s consider the words with the largest changes within each category:</p>

<p><img src="/figs/2016-08-09-trump-tweets/unnamed-chunk-9-1.svg" alt="center" /></p>

<p>This confirms that lots of words annotated as negative sentiments (with a few exceptions like “crime” and “terrorist”) are more common in Trump’s Android tweets than the campaign’s iPhone tweets.</p>

<h3 id="conclusion-the-ghost-in-the-political-machine">Conclusion: the ghost in the political machine</h3>

<p>I was fascinated by the recent <a href="http://www.newyorker.com/magazine/2016/07/25/donald-trumps-ghostwriter-tells-all">New Yorker article</a> about Tony Schwartz, Trump’s ghostwriter for The Art of the Deal. Of particular interest was how Schwartz imitated Trump’s voice and philosophy:</p>

<blockquote>
  <p>In his journal, Schwartz describes the process of trying to make Trump’s voice palatable in the book. It was kind of “a trick,” he writes, to mimic Trump’s blunt, staccato, no-apologies delivery while making him seem almost boyishly appealing…. Looking back at the text now, Schwartz says, “I created a character far more winning than Trump actually is.”</p>
</blockquote>

<p>Like any journalism, data journalism is ultimately about human interest, and there’s one human I’m interested in: who is writing these iPhone tweets?</p>

<p>The majority of the tweets from the iPhone are fairly benign declarations. But consider cases like these, both posted from an iPhone:</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Like the worthless <a href="https://twitter.com/NYDailyNews">@NYDailyNews</a>, looks like <a href="https://twitter.com/politico">@politico</a> will be going out of business. Bad reporting- no money, no cred!</p>&mdash; Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/697404736211959808">February 10, 2016</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Failing <a href="https://twitter.com/nytimes">@NYTimes</a> will always take a good story about me and make it bad. Every article is unfair and biased. Very sad!</p>&mdash; Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/733691591198703616">May 20, 2016</a></blockquote>
<script async="" src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>These tweets certainly sound like the Trump we all know. Maybe our above analysis isn’t complete: maybe Trump has sometimes, however rarely, tweeted from an iPhone (perhaps dictating, or just using it when his own battery ran out). But what if our hypothesis is right, and these weren’t authored by the candidate- just someone trying their best to sound like him?</p>

<p>Or what about tweets like this (also iPhone), which defend Trump’s slogan- but doesn’t really sound like something he’d write?</p>

<blockquote class="twitter-tweet" data-lang="en"><p lang="en" dir="ltr">Our country does not feel &#39;great already&#39; to the millions of wonderful people living in poverty, violence and despair.</p>&mdash; Donald J. Trump (@realDonaldTrump) <a href="https://twitter.com/realDonaldTrump/status/758492727583576064">July 28, 2016</a></blockquote>
<script async="" src="http://platform.twitter.com/widgets.js" charset="utf-8"></script>

<p>A lot has been written about Trump’s mental state. But I’d really rather get inside the head of this anonymous staffer, whose job is to imitate Trump’s unique cadence (“Very sad!”), or to put a positive spin on it, to millions of followers. Are they a true believer, or just a cog in a political machine, mixing whatever mainstream appeal they can into the @realDonaldTrump concoction? Like Tony Schwartz, will they one day regret their involvement?</p>

<div class="footnotes">
  <ol>
    <li id="fn:fullcode">
      <p>To keep the post concise I don’t show all of the code, especially code that generates figures. But you can find the full code <a href="https://github.com/dgrtwo/dgrtwo.github.com/blob/master/_R/2016-08-09-trump-tweets.Rmd">here</a>. <a href="#fnref:fullcode" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:regex">
      <p>We had to use a custom regular expression for Twitter, since typical tokenizers would split the # off of hashtags and @ off of usernames. We also removed links and ampersands (<code class="highlighter-rouge">&amp;amp;</code>) from the text. <a href="#fnref:regex" class="reversefootnote">&#8617;</a></p>
    </li>
    <li id="fn:plusone">
      <p>The “plus ones,” called <a href="https://en.wikipedia.org/wiki/Additive_smoothing">Laplace smoothing</a> are to avoid dividing by zero and to put <a href="http://varianceexplained.org/r/empirical_bayes_baseball/">more trust in common words</a>. <a href="#fnref:plusone" class="reversefootnote">&#8617;</a></p>
    </li>
  </ol>
</div>

      <hr />
      <footer role="contentinfo">
        <div class="article-author-bottom">
          


	<img src="http://varianceexplained.org/images/david_robinson_picture2.jpg" class="bio-photo" alt="David Robinson bio photo">

<h3>David Robinson</h3>
<p>Chief Data Scientist at DataCamp, works in R and Python.</p>
<a href="mailto:drob@datacamp.com" class="author-social" target="_blank"><i class="fa fa-envelope-square"></i> Email</a>
<a href="http://twitter.com/drob" class="author-social" target="_blank"><i class="fa fa-twitter-square"></i> Twitter</a>





<a href="http://github.com/dgrtwo" class="author-social" target="_blank"><i class="fa fa-github"></i> Github</a>
<a href="http://stackoverflow.com/users/712603" class="author-social" target="_blank"><i class="fa fa-stack-overflow"></i> Stack Overflow</a>






<h4>Subscribe</h4>

<form method='post' action='http://blogtrottr.com'>
    <input type='text' name='btr_email' placeholder = 'Your email'/><br />
    <input type='hidden' name='btr_url' value='http://varianceexplained.org/feed.xml' />
    <input type='hidden' name='schedule_type' value='0' />
    <input type='submit' class="styled-button-4" value='Subscribe to this blog' />
</form>

<style type="text/css"> 
.styled-button-4 {
	-webkit-box-shadow:rgba(0,0,0,0.98) 0 1px 0 0;
	-moz-box-shadow:rgba(0,0,0,0.98) 0 1px 0 0;
	box-shadow:rgba(0,0,0,0.98) 0 1px 0 0;
	background-color:#EEE;
	border-radius:0;
	-webkit-border-radius:0;
	-moz-border-radius:0;
	border:1px solid #999;
	color:#666;
	font-family:'Lucida Grande',Tahoma,Verdana,Arial,Sans-serif;
	font-size:11px;
	font-weight:700;
	padding:2px 6px;
	height:28px
}
</style>


<h4>Recommended Blogs</h4>
<ul>
    <li><a href="https://www.datacamp.com/community/blog">DataCamp</a></li>
    <li><a href="http://www.r-bloggers.com/">R Bloggers</a></li>
    <li><a href="http://blog.rstudio.org/">RStudio Blog</a></li>
    <li><a href="http://r4stats.com/">R4Stats</a></li>
    <li><a href="http://simplystatistics.org/">Simply Statistics</a></li>
</ul>

        </div>
        <p class="byline"><strong>Text analysis of Trump's tweets confirms he writes only the (angrier) Android half</strong> was published on <time datetime="2016-08-09T16:00:00+00:00">August 09, 2016</time>.</p>
      </footer>
    </div><!-- /.article-wrap -->
  
    <section id="disqus_thread"></section><!-- /#disqus_thread -->
  
  </article>
</div><!-- /#main -->

<div class="footer-wrap">
  <div class="related-articles">
  <h4>You might also enjoy <small class="pull-right">(<a href="http://varianceexplained.org/posts/">View all posts</a>)</small></h4>
    <ul>
    
    </ul>
    <hr />
  </div><!-- /.related-articles -->
  <footer>
    

<span>&copy; 2018 David Robinson. Powered by <a href="http://jekyllrb.com">Jekyll</a> using the <a href="http://mademistakes.com/minimal-mistakes/">Minimal Mistakes</a> theme.</span>

  </footer>
</div><!-- /.footer-wrap -->

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script>window.jQuery || document.write('<script src="http://varianceexplained.org/assets/js/vendor/jquery-1.9.1.min.js"><\/script>')</script>
<script src="http://varianceexplained.org/assets/js/scripts.min.js"></script>


  
<script type="text/javascript">
    /* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */
    var disqus_shortname = 'varianceexplained'; // required: replace example with your forum shortname

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function() {
        var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
        dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
    })();

    /* * * DON'T EDIT BELOW THIS LINE * * */
    (function () {
        var s = document.createElement('script'); s.async = true;
        s.type = 'text/javascript';
        s.src = '//' + disqus_shortname + '.disqus.com/count.js';
        (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
    }());
</script>
<noscript>Please enable JavaScript to view the <a href="http://disqus.com/?ref_noscript">comments powered by Disqus.</a></noscript>
<a href="http://disqus.com" class="dsq-brlink">comments powered by <span class="logo-disqus">Disqus</span></a>

	        

</body>
</html>